<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.check.action" />
	<context:component-scan base-package="com.check.dao" />
	<context:component-scan base-package="com.check.service" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>
	<!-- 定义使用C3P0连接池的数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的JDBC驱动 -->
		<property name="driverClass">
			<value>${driverClass}</value>
		</property>
		<!-- 连接数据库所用的URL -->
		<property name="jdbcUrl">
			<value>${jdbcUrl}</value>
		</property>
		<!-- 连接数据库的用户名 -->
		<property name="user">
			<value>${user}</value>
		</property>
		<!-- 连接数据库的密码 -->
		<property name="password">
			<value>${password}</value>
		</property>
		<!-- 设置数据库连接池的最大连接数 -->
		<property name="maxPoolSize">
			<value>20</value>
		</property>
		<!-- 设置数据库连接池的最小连接数 -->
		<property name="minPoolSize">
			<value>2</value>
		</property>
		<!-- 设置数据库连接池的初始化连接数 -->
		<property name="initialPoolSize">
			<value>2</value>
		</property>
		<!-- 设置数据库连接池的连接的最大空闲时间,单位为秒 -->
		<property name="maxIdleTime">
			<value>20</value>
		</property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper"
		lazy-init="false" />
	<bean id="springUtil" class="com.check.util.SpringUtil" lazy-init="false" />
	<bean id="wfUtil" class="com.check.util.WFUtil" lazy-init="false" />
	<bean id="zwUtil" class="com.check.util.ZWUtil" lazy-init="false" />
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 定时下载wf报告 -->
	<bean id="wfDownloadTask" class="com.check.util.WFDownloadReportUtil" />
	<bean id="wfTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="delay" value="10000"></property>
		<property name="period" value="60000"></property>
		<property name="timerTask" ref="wfDownloadTask"></property>
	</bean>
	
		<!-- 定时下载zw报告 -->
	<bean id="zwDownloadTask" class="com.check.util.ZWDownloadReportUtil" />
	<bean id="zwTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="delay" value="10000"></property>
		<property name="period" value="60000"></property>
		<property name="timerTask" ref="zwDownloadTask"></property>
	</bean>
	<bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
		<property name="scheduledTimerTasks">
			<list>
<!-- 				<ref local="wfTask"></ref> -->
				<ref local="zwTask"></ref>
			</list>
		</property>
	</bean>
	<!-- 数据库的事务管理器配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation定义数据库事务，这样可以在类或方法中直接使用@Transactional注解来声明事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>